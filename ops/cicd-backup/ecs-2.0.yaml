---
AWSTemplateFormatVersion: '2010-09-09'
Description: Cloudformation template for test use
Parameters:
  ELBStack:
    Description: Name of an active CloudFormation stack that contains load balancers and all target groups
    Type: String
    Default: chris-car-elb
  SecurityStack:
    Description: Name of an active CloudFormation stack that contains all roles and SGs resources
    Type: String
    Default: Ascending-Security
  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Select subnets in your VPC
  JavaImageTag:
    Type: String
    Description: The 8 digits git commit hash code

Resources:
  DemoCluster:
    Type: AWS::ECS::Cluster
  ecsLogGroup: 
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join ['', ['/',!Join ['/', [!Ref 'AWS::StackName',ecs]]]]
      RetentionInDays: 7

  apiTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
      - Name: api
        Essential: true
        Image: !Sub 847915753970.dkr.ecr.us-east-1.amazonaws.com/chris_car:${JavaImageTag}
        Memory: 1536
        PortMappings:
          - ContainerPort: 8080
        Environment:
        - Name: REGION
          Value: !Ref AWS::Region
        - Name: JavaImageTag
          Value: !Ref JavaImageTag
        - Name: LOG_LEVEL
          Value: DEBUG
      TaskRoleArn:
        Fn::ImportValue: !Sub ${SecurityStack}-ECSTaskRole

  apiService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref DemoCluster
      DesiredCount: 1
      LoadBalancers:
        - ContainerName: api
          ContainerPort: 8080
          TargetGroupArn: 
            Fn::ImportValue: !Sub ${ELBStack}-DemoApiTG
      Role: 
        Fn::ImportValue: !Sub ${SecurityStack}-ECSServiceRole
      TaskDefinition: !Ref apiTaskDefinition
 
  apiServiceScalingTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    DependsOn: apiService
    Properties:
      MaxCapacity: 5
      MinCapacity: 1
      ResourceId: !Join ['', [service/, !Ref 'DemoCluster', /, !GetAtt [apiService, Name]]]
      RoleARN: 
        Fn::ImportValue: !Sub ${SecurityStack}-AutoscalingRole
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs

  apiServiceScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: !Sub apiServiceScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref apiServiceScalingTarget
      TargetTrackingScalingPolicyConfiguration:
        CustomizedMetricSpecification:
          Dimensions: 
            - Name: TargetGroup
              Value: !Select
                - 5
                - !Split
                  - ":"
                  - Fn::ImportValue: !Sub ${ELBStack}-DemoApiTG
          MetricName: RequestCountPerTarget
          Namespace: AWS/ApplicationELB
          Statistic: Sum
        ScaleInCooldown: 60
        TargetValue: 500
 
  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData: 
        ImageId: "{{resolve:ssm:/aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id:63}}"
        IamInstanceProfile: 
          Arn: 
            Fn::ImportValue: !Sub ${SecurityStack}-EC2InstanceProfile
        KeyName: chrisWei
        SecurityGroupIds:
          - Fn::ImportValue: !Sub ${SecurityStack}-ECSSG
        UserData:
          Fn::Base64:
            !Sub |
              #!/bin/bash
              echo "ECS_CLUSTER=${DemoCluster}" >> /etc/ecs/ecs.config
              yum update -y
              yum install aws-cli -y
  SpotFleetAutoScaling:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      DesiredCapacity: 1
      MaxSize: 5
      MinSize: 1
      MixedInstancesPolicy:
        InstancesDistribution:
          SpotInstancePools: 18
          OnDemandPercentageAboveBaseCapacity: 0
        LaunchTemplate: 
          LaunchTemplateSpecification: 
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
            - InstanceType: t2.large
            - InstanceType: t2.xlarge
            - InstanceType: t2.2xlarge
            - InstanceType: t3.large
            - InstanceType: t3.xlarge
            - InstanceType: t3.2xlarge
            - InstanceType: t3a.large
            - InstanceType: t3a.xlarge
            - InstanceType: t3a.2xlarge
            - InstanceType: a1.large
            - InstanceType: a1.xlarge
            - InstanceType: a1.2xlarge
            - InstanceType: m4.large
            - InstanceType: m4.xlarge
            - InstanceType: m4.2xlarge
            - InstanceType: m5.large
            - InstanceType: m5.xlarge
            - InstanceType: m5.2xlarge
      VPCZoneIdentifier: !Ref Subnets
  EC2AutoScalingPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref SpotFleetAutoScaling
      EstimatedInstanceWarmup: 180
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        CustomizedMetricSpecification:
          Dimensions: 
            - Name: TargetGroup
              Value: !Select
                - 5
                - !Split
                  - ":"
                  - Fn::ImportValue: !Sub ${ELBStack}-DemoApiTG
          MetricName: RequestCountPerTarget
          Namespace: AWS/ApplicationELB
          Statistic: Sum
        TargetValue: 500